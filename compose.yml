services:
  nginx:
    image: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - myapp

  frontend:
    image: frontend
    stdin_open: true
    tty: true
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    volumes:
      - ./services/frontend:/app
    working_dir: /app
    networks:
      - myapp


  backend:
    image: backend
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    volumes:
      - ./services/backend:/app
    environment:
      PGSERVICEFILE: /run/secrets/pg_service
    secrets:
      - pg_service
      - pgpass
    working_dir: /app
    command: uv run python manage.py runserver 0.0.0.0:8000
    networks:
      - myapp
    depends_on:
      - db

  db:
    image: postgres
    environment:
      POSTGRES_USER: test-user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: test-db
    secrets:
      - postgres_password
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - myapp

networks:
  myapp: 
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"

volumes:
  db_data:
    name: db_data

secrets:
  postgres_password:
    environment: DB_PASSWORD
  
  pg_service:
    file: ./secrets/.pg_service.conf

  pgpass:
    file: ./secrets/.pgpass

  